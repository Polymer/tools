{"version":3,"sources":["src/template-map.js"," [synthetic:util/global] ","src/css-parse.js","src/apply-shim-utils.js","src/style-settings.js","src/common-regex.js","src/unscoped-style-handler.js","src/style-util.js","src/document-wait.js","src/style-transformer.js","src/document-watcher.js","src/style-info.js","src/style-properties.js","src/style-placeholder.js","src/scoping-shim.js","src/style-cache.js","src/common-utils.js","entrypoints/scoping-shim.js"],"names":["$jscomp.global","templateMap","constructor","StyleNode","parse","text","replace","RX$$module$src$css_parse.comments","RX$$module$src$css_parse.port","parseCss","root","length","n","i","l","OPEN_BRACE","p","previous","push","CLOSE_BRACE","node","t","substring","trim","ss","_expandUnicodeEscapes","RX$$module$src$css_parse.multipleSpaces","lastIndexOf","s","indexOf","AT_START","MEDIA_START","types$$module$src$css_parse.MEDIA_RULE","match","RX$$module$src$css_parse.keyframesRule","types$$module$src$css_parse.KEYFRAMES_RULE","split","pop","VAR_START","types$$module$src$css_parse.MIXIN_RULE","types$$module$src$css_parse.STYLE_RULE","r$","r","code","repeat","stringify","preserveProperties","cssText","rules","RX$$module$src$css_parse.customProp","RX$$module$src$css_parse.mixinProp","RX$$module$src$css_parse.mixinApply","RX$$module$src$css_parse.varApply","STYLE_RULE","KEYFRAMES_RULE","MEDIA_RULE","MIXIN_RULE","comments","port","customProp","mixinProp","mixinApply","varApply","keyframesRule","multipleSpaces","promise","Promise","resolve","invalidate","elementName","template","templateIsValid","startValidatingTemplate","_validating","then","nativeShadow","window","nativeCssVariables","calcCssVariables","settings","navigator","userAgent","CSS","supports","ShadyCSS","undefined","nativeCss","module$src$style_settings.nativeCssVariables","VAR_ASSIGN","MIXIN_MATCH","VAR_CONSUMED","ANIMATION_MATCH","MEDIA_MATCH","BRACKETED","styleTextSet","Set","toCssText","callback","forEachRule","rulesForStyle","style","textContent","isKeyframesSelector","rule","styleRuleCallback","keyframesRuleCallback","onlyActiveRules","skipRules","type","matchMedia","matches","applyCss","moniker","target","contextNode","document","createElement","setAttribute","applyStyle","lastHeadApplyNode","head","insertBefore","nextSibling","firstChild","compareDocumentPosition","position","Node","DOCUMENT_POSITION_PRECEDING","processVariableAndFallback","str","start","level","inner","end","prefix","suffix","comma","value","fallback","setElementClassRaw","element","call","getIsExtends","localName","typeExtension","is","getAttribute","extends","readyPromise","whenReady","resolveFn","documentWait","requestAnimationFrame","readyState","addEventListener","StyleTransformer","dom","scope","shouldRemoveScope","$jscompDefaultExport","_transformDom","selector","nodeType","ELEMENT_NODE","c$","childNodes","content","_content","children","classList","remove","SCOPE_NAME","add","c","CLASS","newValue","elementStyles","styleRules","cssBuildType","css","ext","hostScope","_calcHostScope","CSS_CLASS_PREFIX","isScoped","transformedSelector","_transformRuleCss","self","_transformComplexSelector","transformer","p$","COMPLEX_SELECTOR_SEP","join","_twiddleNthPlus","NTH","m","inside","stop","isNth","test","SLOTTED_START","HOST","SIMPLE_SELECTOR_SEP","info","_transformCompoundSelector","combinator","slottedIndex","SLOTTED","_transformHostSelector","_transformSimpleSelector","slotted","SLOTTED_PAREN","paren","DIR_PAREN","before","dir","PSEUDO_PREFIX","HOST_PAREN","SIMPLE_SELECTOR_PREFIX","host","typeSelector","SELECTOR_NO_MATCH","normalizeRootSelector","ROOT","_transformDocumentSelector","SCOPE_DOC_SELECTOR","$jscomp.global.Object.defineProperties","RegExp","flush","handler","mxns","x","mxn","documentElement","addedNodes","getRootNode","classes","Array","from","hasAttribute","idx","ownerDocument","currentScope","DOCUMENT_FRAGMENT_NODE","newScope","unscoped","j","observer","MutationObserver","observe","childList","subtree","delayedStart","body","listener","removeEventListener","takeRecords","module$src$document_watcher.flush","StyleInfo","ast","placeholder","ownStylePropertyNames","overrideStyleProperties","customStyle","scopeSelector","styleProperties","get","set","styleInfo","_getStyleRules","prototype","matchesSelector","method","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","IS_IE","StyleProperties","decorateStyles","props","keyframes","ruleIndex","decorateRule","index","propertyInfo","exec","name","onKeyframesRule","_keyframes","names","properties","collectProperties","hasProperties","Object","assign","any","valueForProperty","property","valueForProperties","fn","propertyValue","parts","lastIndex","colon","pp","slice","propertyDataFromStyles","o","selectorToMatch","parseInt","key","whenHostOrRootRule","cssBuild","parsedSelector","isRoot","isHost","hostAndRootPropertiesForScope","hostProps","rootProps","_element","transformStyles","hostSelector","hostRx","HOST_PREFIX","rxHostSelector","HOST_SUFFIX","StyleInfo$$module$src$style_info.get","keyframeTransforms","_elementKeyframeTransforms","output","input","hasAnimations","keyframeNamesToTransform","keyframe","transform","keyframesRules","keyframesNameRx","transformedKeyframesName","scopeId","_keyframesRuleTransformer","applyCustomStyle","XSCOPE_NAME","placeholderMap","ce","origDefine","wrappedDefine","clazz","options","placeHolder","createComment","after","styleCache","cache","typeMax","ScopingShim","_scopeCounter","_documentOwner","_documentOwnerStyleInfo","StyleInfo$$module$src$style_info.set","_elementsHaveApplied","_customStyleInterface","_applyShim","_ensure","ScopingShim$$module$src$scoping_shim.prototype","?.prototype","ScopingShim$$module$src$scoping_shim_prototype$flush","getStyleAst","styleAstToString","prepareTemplate","_prepared","querySelector","styleTextParts","styles","querySelectorAll","scopingAttribute","has","newStyle","cloneNode","appendChild","parentNode","removeChild","__cssBuild","_cssBuild","ownPropertyNames","shadowroot","_style","_ownPropertyNames","_ensureCustomStyleInterface","CustomStyleInterface","transformCustomStyleForDocument","flushCustomStyles","_ensureApplyShim","ApplyShim","customStyles","_revalidateCustomStyleApplyShim","_updateProperties","_applyCustomStyles","styleDocument","styleElement","overrideProps","_isRootOwner","removeProperty","setProperty","shadowRoot","list","entry","pn","cachedStyle","cacheEntry","oldScopeSelector","cachedScopeSelector","id","v","shift","_styleOwnerForNode","owner","ownerStyleInfo","create","hostAndRootProps","propertiesMatchingHost","propertyData","overrides","getOwnPropertyNames","styleSubtree","shadowChildren","_transformRule","getComputedStyleValue","getComputedStyle","getPropertyValue","setElementClass","classString","scopeName","classAttr","k$","_styleInfoForNode","defineProperties","scopingShim","elementExtends"],"mappings":"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","file":"scoping-shim.min.js","sourcesContent":["/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/**\n * @const {!Object<string, !HTMLTemplateElement>}\n */\nconst templateMap = {};\nexport default templateMap;\n",null,"/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/*\nExtremely simple css parser. Intended to be not more than what we need\nand definitely not necessarily correct =).\n*/\n\n'use strict';\n\n/** @unrestricted */\nclass StyleNode {\n  constructor() {\n    /** @type {number} */\n    this['start'] = 0;\n    /** @type {number} */\n    this['end'] = 0;\n    /** @type {StyleNode} */\n    this['previous'] = null;\n    /** @type {StyleNode} */\n    this['parent'] = null;\n    /** @type {Array<StyleNode>} */\n    this['rules'] = null;\n    /** @type {string} */\n    this['parsedCssText'] = '';\n    /** @type {string} */\n    this['cssText'] = '';\n    /** @type {boolean} */\n    this['atRule'] = false;\n    /** @type {number} */\n    this['type'] = 0;\n    /** @type {string} */\n    this['keyframesName'] = '';\n    /** @type {string} */\n    this['selector'] = '';\n    /** @type {string} */\n    this['parsedSelector'] = '';\n  }\n}\n\nexport {StyleNode}\n\n// given a string of css, return a simple rule tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nexport function parse(text) {\n  text = clean(text);\n  return parseCss(lex(text), text);\n}\n\n// remove stuff we don't care about that may hinder parsing\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction clean(cssText) {\n  return cssText.replace(RX.comments, '').replace(RX.port, '');\n}\n\n// super simple {...} lexer that returns a node tree\n/**\n * @param {string} text\n * @return {StyleNode}\n */\nfunction lex(text) {\n  let root = new StyleNode();\n  root['start'] = 0;\n  root['end'] = text.length\n  let n = root;\n  for (let i = 0, l = text.length; i < l; i++) {\n    if (text[i] === OPEN_BRACE) {\n      if (!n['rules']) {\n        n['rules'] = [];\n      }\n      let p = n;\n      let previous = p['rules'][p['rules'].length - 1] || null;\n      n = new StyleNode();\n      n['start'] = i + 1;\n      n['parent'] = p;\n      n['previous'] = previous;\n      p['rules'].push(n);\n    } else if (text[i] === CLOSE_BRACE) {\n      n['end'] = i + 1;\n      n = n['parent'] || root;\n    }\n  }\n  return root;\n}\n\n// add selectors/cssText to node tree\n/**\n * @param {StyleNode} node\n * @param {string} text\n * @return {StyleNode}\n */\nfunction parseCss(node, text) {\n  let t = text.substring(node['start'], node['end'] - 1);\n  node['parsedCssText'] = node['cssText'] = t.trim();\n  if (node['parent']) {\n    let ss = node['previous'] ? node['previous']['end'] : node['parent']['start'];\n    t = text.substring(ss, node['start'] - 1);\n    t = _expandUnicodeEscapes(t);\n    t = t.replace(RX.multipleSpaces, ' ');\n    // TODO(sorvell): ad hoc; make selector include only after last ;\n    // helps with mixin syntax\n    t = t.substring(t.lastIndexOf(';') + 1);\n    let s = node['parsedSelector'] = node['selector'] = t.trim();\n    node['atRule'] = (s.indexOf(AT_START) === 0);\n    // note, support a subset of rule types...\n    if (node['atRule']) {\n      if (s.indexOf(MEDIA_START) === 0) {\n        node['type'] = types.MEDIA_RULE;\n      } else if (s.match(RX.keyframesRule)) {\n        node['type'] = types.KEYFRAMES_RULE;\n        node['keyframesName'] =\n          node['selector'].split(RX.multipleSpaces).pop();\n      }\n    } else {\n      if (s.indexOf(VAR_START) === 0) {\n        node['type'] = types.MIXIN_RULE;\n      } else {\n        node['type'] = types.STYLE_RULE;\n      }\n    }\n  }\n  let r$ = node['rules'];\n  if (r$) {\n    for (let i = 0, l = r$.length, r;\n      (i < l) && (r = r$[i]); i++) {\n      parseCss(r, text);\n    }\n  }\n  return node;\n}\n\n/**\n * conversion of sort unicode escapes with spaces like `\\33 ` (and longer) into\n * expanded form that doesn't require trailing space `\\000033`\n * @param {string} s\n * @return {string}\n */\nfunction _expandUnicodeEscapes(s) {\n  return s.replace(/\\\\([0-9a-f]{1,6})\\s/gi, function() {\n    let code = arguments[1],\n      repeat = 6 - code.length;\n    while (repeat--) {\n      code = '0' + code;\n    }\n    return '\\\\' + code;\n  });\n}\n\n/**\n * stringify parsed css.\n * @param {StyleNode} node\n * @param {boolean=} preserveProperties\n * @param {string=} text\n * @return {string}\n */\nexport function stringify(node, preserveProperties, text = '') {\n  // calc rule cssText\n  let cssText = '';\n  if (node['cssText'] || node['rules']) {\n    let r$ = node['rules'];\n    if (r$ && !_hasMixinRules(r$)) {\n      for (let i = 0, l = r$.length, r;\n        (i < l) && (r = r$[i]); i++) {\n        cssText = stringify(r, preserveProperties, cssText);\n      }\n    } else {\n      cssText = preserveProperties ? node['cssText'] :\n        removeCustomProps(node['cssText']);\n      cssText = cssText.trim();\n      if (cssText) {\n        cssText = '  ' + cssText + '\\n';\n      }\n    }\n  }\n  // emit rule if there is cssText\n  if (cssText) {\n    if (node['selector']) {\n      text += node['selector'] + ' ' + OPEN_BRACE + '\\n';\n    }\n    text += cssText;\n    if (node['selector']) {\n      text += CLOSE_BRACE + '\\n\\n';\n    }\n  }\n  return text;\n}\n\n/**\n * @param {Array<StyleNode>} rules\n * @return {boolean}\n */\nfunction _hasMixinRules(rules) {\n  let r = rules[0];\n  return Boolean(r) && Boolean(r['selector']) && r['selector'].indexOf(VAR_START) === 0;\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomProps(cssText) {\n  cssText = removeCustomPropAssignment(cssText);\n  return removeCustomPropApply(cssText);\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nexport function removeCustomPropAssignment(cssText) {\n  return cssText\n    .replace(RX.customProp, '')\n    .replace(RX.mixinProp, '');\n}\n\n/**\n * @param {string} cssText\n * @return {string}\n */\nfunction removeCustomPropApply(cssText) {\n  return cssText\n    .replace(RX.mixinApply, '')\n    .replace(RX.varApply, '');\n}\n\n/** @enum {number} */\nexport const types = {\n  STYLE_RULE: 1,\n  KEYFRAMES_RULE: 7,\n  MEDIA_RULE: 4,\n  MIXIN_RULE: 1000\n}\n\nconst OPEN_BRACE = '{';\nconst CLOSE_BRACE = '}';\n\n// helper regexp's\nconst RX = {\n  comments: /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//gim,\n  port: /@import[^;]*;/gim,\n  customProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?(?:[;\\n]|$)/gim,\n  mixinProp: /(?:^[^;\\-\\s}]+)?--[^;{}]*?:[^{};]*?{[^}]*?}(?:[;\\n]|$)?/gim,\n  mixinApply: /@apply\\s*\\(?[^);]*\\)?\\s*(?:[;\\n]|$)?/gim,\n  varApply: /[^;:]*?:[^;]*?var\\([^;]*\\)(?:[;\\n]|$)?/gim,\n  keyframesRule: /^@[^\\s]*keyframes/,\n  multipleSpaces: /\\s+/g\n}\n\nconst VAR_START = '--';\nconst MEDIA_START = '@media';\nconst AT_START = '@';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport templateMap from './template-map.js';\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/*\n * Utilities for handling invalidating apply-shim mixins for a given template.\n *\n * The invalidation strategy involves keeping track of the \"current\" version of a template's mixins, and updating that count when a mixin is invalidated.\n * The template\n */\n\n/** @const {string} */\nconst CURRENT_VERSION = '_applyShimCurrentVersion';\n\n/** @const {string} */\nconst NEXT_VERSION = '_applyShimNextVersion';\n\n/** @const {string} */\nconst VALIDATING_VERSION = '_applyShimValidatingVersion';\n\n/**\n * @const {Promise<void>}\n */\nconst promise = Promise.resolve();\n\n/**\n * @param {string} elementName\n */\nexport function invalidate(elementName){\n  let template = templateMap[elementName];\n  if (template) {\n    invalidateTemplate(template);\n  }\n}\n\n/**\n * This function can be called multiple times to mark a template invalid\n * and signal that the style inside must be regenerated.\n *\n * Use `startValidatingTemplate` to begin an asynchronous validation cycle.\n * During that cycle, call `templateIsValidating` to see if the template must\n * be revalidated\n * @param {HTMLTemplateElement} template\n */\nexport function invalidateTemplate(template) {\n  // default the current version to 0\n  template[CURRENT_VERSION] = template[CURRENT_VERSION] || 0;\n  // ensure the \"validating for\" flag exists\n  template[VALIDATING_VERSION] = template[VALIDATING_VERSION] || 0;\n  // increment the next version\n  template[NEXT_VERSION] = (template[NEXT_VERSION] || 0) + 1;\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValid(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValid(template);\n  }\n  return true;\n}\n\n/**\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValid(template) {\n  return template[CURRENT_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * @param {string} elementName\n * @return {boolean}\n */\nexport function isValidating(elementName) {\n  let template = templateMap[elementName];\n  if (template) {\n    return templateIsValidating(template);\n  }\n  return false;\n}\n\n/**\n * Returns true if the template is currently invalid and `startValidating` has been called since the last invalidation.\n * If false, the template must be validated.\n * @param {HTMLTemplateElement} template\n * @return {boolean}\n */\nexport function templateIsValidating(template) {\n  return !templateIsValid(template) && template[VALIDATING_VERSION] === template[NEXT_VERSION];\n}\n\n/**\n * the template is marked as `validating` for one microtask so that all instances\n * found in the tree crawl of `applyStyle` will update themselves,\n * but the template will only be updated once.\n * @param {string} elementName\n*/\nexport function startValidating(elementName) {\n  let template = templateMap[elementName];\n  startValidatingTemplate(template);\n}\n\n/**\n * Begin an asynchronous invalidation cycle.\n * This should be called after every validation of a template\n *\n * After one microtask, the template will be marked as valid until the next call to `invalidateTemplate`\n * @param {HTMLTemplateElement} template\n */\nexport function startValidatingTemplate(template) {\n  // remember that the current \"next version\" is the reason for this validation cycle\n  template[VALIDATING_VERSION] = template[NEXT_VERSION];\n  // however, there only needs to be one async task to clear the counters\n  if (!template._validating) {\n    template._validating = true;\n    promise.then(function() {\n      // sync the current version to let future invalidations cause a refresh cycle\n      template[CURRENT_VERSION] = template[NEXT_VERSION];\n      template._validating = false;\n    });\n  }\n}\n\n/**\n * @return {boolean}\n */\nexport function elementsAreInvalid() {\n  for (let elementName in templateMap) {\n    let template = templateMap[elementName];\n    if (!templateIsValid(template)) {\n      return true;\n    }\n  }\n  return false;\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let nativeShadow = !(window['ShadyDOM'] && window['ShadyDOM']['inUse']);\nexport let nativeCssVariables;\n\n/**\n * @param {(ShadyCSSOptions | ShadyCSSInterface)=} settings\n */\nfunction calcCssVariables(settings) {\n  if (settings && settings['shimcssproperties']) {\n    nativeCssVariables = false;\n  } else {\n    // chrome 49 has semi-working css vars, check if box-shadow works\n    // safari 9.1 has a recalc bug: https://bugs.webkit.org/show_bug.cgi?id=155782\n    // However, shim css custom properties are only supported with ShadyDOM enabled,\n    // so fall back on native if we do not detect ShadyDOM\n    // Edge 15: custom properties used in ::before and ::after will also be used in the parent element\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12414257/\n    nativeCssVariables = nativeShadow || Boolean(!navigator.userAgent.match(/AppleWebKit\\/601|Edge\\/15/) &&\n      window.CSS && CSS.supports && CSS.supports('box-shadow', '0 0 0 var(--foo)'));\n  }\n}\n\nif (window.ShadyCSS && window.ShadyCSS.nativeCss !== undefined) {\n  nativeCssVariables = window.ShadyCSS.nativeCss;\n} else if (window.ShadyCSS) {\n  calcCssVariables(window.ShadyCSS);\n  // reset window variable to let ShadyCSS API take its place\n  window.ShadyCSS = undefined;\n} else {\n  calcCssVariables(window['WebComponents'] && window['WebComponents']['flags']);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\nexport const VAR_ASSIGN = /(?:^|[;\\s{]\\s*)(--[\\w-]*?)\\s*:\\s*(?:((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};{])+)|\\{([^}]*)\\}(?:(?=[;\\s}])|$))/gi;\nexport const MIXIN_MATCH = /(?:^|\\W+)@apply\\s*\\(?([^);\\n]*)\\)?/gi;\nexport const VAR_CONSUMED = /(--[\\w-]+)\\s*([:,;)]|$)/gi;\nexport const ANIMATION_MATCH = /(animation\\s*:)|(animation-name\\s*:)/;\nexport const MEDIA_MATCH = /@media\\s(.*)/;\nexport const IS_VAR = /^--/;\nexport const BRACKETED = /\\{[^}]*\\}/g;\nexport const HOST_PREFIX = '(?:^|[^.#[:])';\nexport const HOST_SUFFIX = '($|[.:[\\\\s>+~])';\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {!Set<string>} */\nconst styleTextSet = new Set();\n\nexport const scopingAttribute = 'shady-unscoped';\n\n/**\n * Add a specifically-marked style to the document directly, and only one copy of that style.\n *\n * @param {!HTMLStyleElement} style\n * @return {undefined}\n */\nexport function processUnscopedStyle(style) {\n  const text = style.textContent;\n  if (!styleTextSet.has(text)) {\n    styleTextSet.add(text);\n    const newStyle = style.cloneNode(true);\n    document.head.appendChild(newStyle);\n  }\n}\n\n/**\n * Check if a style is supposed to be unscoped\n * @param {!HTMLStyleElement} style\n * @return {boolean} true if the style has the unscoping attribute\n */\nexport function isUnscopedStyle(style) {\n  return style.hasAttribute(scopingAttribute);\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport {parse, stringify, types, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {MEDIA_MATCH} from './common-regex.js';\nimport {processUnscopedStyle, isUnscopedStyle} from './unscoped-style-handler.js';\n\n/**\n * @param {string|StyleNode} rules\n * @param {function(StyleNode)=} callback\n * @return {string}\n */\nexport function toCssText (rules, callback) {\n  if (!rules) {\n    return '';\n  }\n  if (typeof rules === 'string') {\n    rules = parse(rules);\n  }\n  if (callback) {\n    forEachRule(rules, callback);\n  }\n  return stringify(rules, nativeCssVariables);\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @return {StyleNode}\n */\nexport function rulesForStyle(style) {\n  if (!style['__cssRules'] && style.textContent) {\n    style['__cssRules'] = parse(style.textContent);\n  }\n  return style['__cssRules'] || null;\n}\n\n// Tests if a rule is a keyframes selector, which looks almost exactly\n// like a normal selector but is not (it has nothing to do with scoping\n// for example).\n/**\n * @param {StyleNode} rule\n * @return {boolean}\n */\nexport function isKeyframesSelector(rule) {\n  return Boolean(rule['parent']) &&\n  rule['parent']['type'] === types.KEYFRAMES_RULE;\n}\n\n/**\n * @param {StyleNode} node\n * @param {Function=} styleRuleCallback\n * @param {Function=} keyframesRuleCallback\n * @param {boolean=} onlyActiveRules\n */\nexport function forEachRule(node, styleRuleCallback, keyframesRuleCallback, onlyActiveRules) {\n  if (!node) {\n    return;\n  }\n  let skipRules = false;\n  let type = node['type'];\n  if (onlyActiveRules) {\n    if (type === types.MEDIA_RULE) {\n      let matchMedia = node['selector'].match(MEDIA_MATCH);\n      if (matchMedia) {\n        // if rule is a non matching @media rule, skip subrules\n        if (!window.matchMedia(matchMedia[1]).matches) {\n          skipRules = true;\n        }\n      }\n    }\n  }\n  if (type === types.STYLE_RULE) {\n    styleRuleCallback(node);\n  } else if (keyframesRuleCallback &&\n    type === types.KEYFRAMES_RULE) {\n    keyframesRuleCallback(node);\n  } else if (type === types.MIXIN_RULE) {\n    skipRules = true;\n  }\n  let r$ = node['rules'];\n  if (r$ && !skipRules) {\n    for (let i=0, l=r$.length, r; (i<l) && (r=r$[i]); i++) {\n      forEachRule(r, styleRuleCallback, keyframesRuleCallback, onlyActiveRules);\n    }\n  }\n}\n\n// add a string of cssText to the document.\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @param {Node} target\n * @param {Node} contextNode\n * @return {HTMLStyleElement}\n */\nexport function applyCss(cssText, moniker, target, contextNode) {\n  let style = createScopeStyle(cssText, moniker);\n  applyStyle(style, target, contextNode);\n  return style;\n}\n\n/**\n * @param {string} cssText\n * @param {string} moniker\n * @return {HTMLStyleElement}\n */\nexport function createScopeStyle(cssText, moniker) {\n  let style = /** @type {HTMLStyleElement} */(document.createElement('style'));\n  if (moniker) {\n    style.setAttribute('scope', moniker);\n  }\n  style.textContent = cssText;\n  return style;\n}\n\n/**\n * Track the position of the last added style for placing placeholders\n * @type {Node}\n */\nlet lastHeadApplyNode = null;\n\n// insert a comment node as a styling position placeholder.\n/**\n * @param {string} moniker\n * @return {!Comment}\n */\nexport function applyStylePlaceHolder(moniker) {\n  let placeHolder = document.createComment(' Shady DOM styles for ' +\n    moniker + ' ');\n  let after = lastHeadApplyNode ?\n    lastHeadApplyNode['nextSibling'] : null;\n  let scope = document.head;\n  scope.insertBefore(placeHolder, after || scope.firstChild);\n  lastHeadApplyNode = placeHolder;\n  return placeHolder;\n}\n\n/**\n * @param {HTMLStyleElement} style\n * @param {?Node} target\n * @param {?Node} contextNode\n */\nexport function applyStyle(style, target, contextNode) {\n  target = target || document.head;\n  let after = (contextNode && contextNode.nextSibling) ||\n    target.firstChild;\n  target.insertBefore(style, after);\n  if (!lastHeadApplyNode) {\n    lastHeadApplyNode = style;\n  } else {\n    // only update lastHeadApplyNode if the new style is inserted after the old lastHeadApplyNode\n    let position = style.compareDocumentPosition(lastHeadApplyNode);\n    if (position === Node.DOCUMENT_POSITION_PRECEDING) {\n      lastHeadApplyNode = style;\n    }\n  }\n}\n\n/**\n * @param {string} buildType\n * @return {boolean}\n */\nexport function isTargetedBuild(buildType) {\n  return nativeShadow ? buildType === 'shadow' : buildType === 'shady';\n}\n\n/**\n * @param {Element} element\n * @return {?string}\n */\nexport function getCssBuildType(element) {\n  return element.getAttribute('css-build');\n}\n\n/**\n * Walk from text[start] matching parens and\n * returns position of the outer end paren\n * @param {string} text\n * @param {number} start\n * @return {number}\n */\nfunction findMatchingParen(text, start) {\n  let level = 0;\n  for (let i=start, l=text.length; i < l; i++) {\n    if (text[i] === '(') {\n      level++;\n    } else if (text[i] === ')') {\n      if (--level === 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * @param {string} str\n * @param {function(string, string, string, string)} callback\n */\nexport function processVariableAndFallback(str, callback) {\n  // find 'var('\n  let start = str.indexOf('var(');\n  if (start === -1) {\n    // no var?, everything is prefix\n    return callback(str, '', '', '');\n  }\n  //${prefix}var(${inner})${suffix}\n  let end = findMatchingParen(str, start + 3);\n  let inner = str.substring(start + 4, end);\n  let prefix = str.substring(0, start);\n  // suffix may have other variables\n  let suffix = processVariableAndFallback(str.substring(end + 1), callback);\n  let comma = inner.indexOf(',');\n  // value and fallback args should be trimmed to match in property lookup\n  if (comma === -1) {\n    // variable, no fallback\n    return callback(prefix, inner.trim(), '', suffix);\n  }\n  // var(${value},${fallback})\n  let value = inner.substring(0, comma).trim();\n  let fallback = inner.substring(comma + 1).trim();\n  return callback(prefix, value, fallback, suffix);\n}\n\n/**\n * @param {Element} element\n * @param {string} value\n */\nexport function setElementClassRaw(element, value) {\n  // use native setAttribute provided by ShadyDOM when setAttribute is patched\n  if (nativeShadow) {\n    element.setAttribute('class', value);\n  } else {\n    window['ShadyDOM']['nativeMethods']['setAttribute'].call(element, 'class', value);\n  }\n}\n\n/**\n * @param {Element | {is: string, extends: string}} element\n * @return {{is: string, typeExtension: string}}\n */\nexport function getIsExtends(element) {\n  let localName = element['localName'];\n  let is = '', typeExtension = '';\n  /*\n  NOTE: technically, this can be wrong for certain svg elements\n  with `-` in the name like `<font-face>`\n  */\n  if (localName) {\n    if (localName.indexOf('-') > -1) {\n      is = localName;\n    } else {\n      typeExtension = localName;\n      is = (element.getAttribute && element.getAttribute('is')) || '';\n    }\n  } else {\n    is = /** @type {?} */(element).is;\n    typeExtension = /** @type {?} */(element).extends;\n  }\n  return {is, typeExtension};\n}\n\n/**\n * @param {Element|DocumentFragment} element\n * @return {string}\n */\nexport function gatherStyleText(element) {\n  /** @type {!Array<string>} */\n  const styleTextParts = [];\n  const styles = /** @type {!NodeList<!HTMLStyleElement>} */(element.querySelectorAll('style'));\n  for (let i = 0; i < styles.length; i++) {\n    const style = styles[i];\n    if (isUnscopedStyle(style)) {\n      if (!nativeShadow) {\n        processUnscopedStyle(style);\n        style.parentNode.removeChild(style);\n      }\n    } else {\n      styleTextParts.push(style.textContent);\n      style.parentNode.removeChild(style);\n    }\n  }\n  return styleTextParts.join('').trim();\n}","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/** @type {Promise<void>} */\nlet readyPromise = null;\n\n/** @type {?function(?function())} */\nlet whenReady = window['HTMLImports'] && window['HTMLImports']['whenReady'] || null;\n\n/** @type {function()} */\nlet resolveFn;\n\n/**\n * @param {?function()} callback\n */\nexport default function documentWait(callback) {\n  requestAnimationFrame(function() {\n    if (whenReady) {\n      whenReady(callback)\n    } else {\n      if (!readyPromise) {\n        readyPromise = new Promise((resolve) => {resolveFn = resolve});\n        if (document.readyState === 'complete') {\n          resolveFn();\n        } else {\n          document.addEventListener('readystatechange', () => {\n            if (document.readyState === 'complete') {\n              resolveFn();\n            }\n          });\n        }\n      }\n      readyPromise.then(function(){ callback && callback(); });\n    }\n  });\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport * as StyleUtil from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/* Transforms ShadowDOM styling into ShadyDOM styling\n\n* scoping:\n\n  * elements in scope get scoping selector class=\"x-foo-scope\"\n  * selectors re-written as follows:\n\n    div button -> div.x-foo-scope button.x-foo-scope\n\n* :host -> scopeName\n\n* :host(...) -> scopeName...\n\n* ::slotted(...) -> scopeName > ...\n\n* ...:dir(ltr|rtl) -> [dir=\"ltr|rtl\"] ..., ...[dir=\"ltr|rtl\"]\n\n* :host(:dir[rtl]) -> scopeName:dir(rtl) -> [dir=\"rtl\"] scopeName, scopeName[dir=\"rtl\"]\n\n*/\nconst SCOPE_NAME = 'style-scope';\n\nclass StyleTransformer {\n  get SCOPE_NAME() {\n    return SCOPE_NAME;\n  }\n  // Given a node and scope name, add a scoping class to each node\n  // in the tree. This facilitates transforming css into scoped rules.\n  dom(node, scope, shouldRemoveScope) {\n    // one time optimization to skip scoping...\n    if (node['__styleScoped']) {\n      node['__styleScoped'] = null;\n    } else {\n      this._transformDom(node, scope || '', shouldRemoveScope);\n    }\n  }\n\n  _transformDom(node, selector, shouldRemoveScope) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      this.element(node, selector, shouldRemoveScope);\n    }\n    let c$ = (node.localName === 'template') ?\n      (node.content || node._content).childNodes :\n      node.children || node.childNodes;\n    if (c$) {\n      for (let i=0; i<c$.length; i++) {\n        this._transformDom(c$[i], selector, shouldRemoveScope);\n      }\n    }\n  }\n\n  element(element, scope, shouldRemoveScope) {\n    // note: if using classes, we add both the general 'style-scope' class\n    // as well as the specific scope. This enables easy filtering of all\n    // `style-scope` elements\n    if (scope) {\n      // note: svg on IE does not have classList so fallback to class\n      if (element.classList) {\n        if (shouldRemoveScope) {\n          element.classList.remove(SCOPE_NAME);\n          element.classList.remove(scope);\n        } else {\n          element.classList.add(SCOPE_NAME);\n          element.classList.add(scope);\n        }\n      } else if (element.getAttribute) {\n        let c = element.getAttribute(CLASS);\n        if (shouldRemoveScope) {\n          if (c) {\n            let newValue = c.replace(SCOPE_NAME, '').replace(scope, '');\n            StyleUtil.setElementClassRaw(element, newValue);\n          }\n        } else {\n          let newValue = (c ? c + ' ' : '') + SCOPE_NAME + ' ' + scope;\n          StyleUtil.setElementClassRaw(element, newValue);\n        }\n      }\n    }\n  }\n\n  elementStyles(element, styleRules, callback) {\n    let cssBuildType = element['__cssBuild'];\n    // no need to shim selectors if settings.useNativeShadow, also\n    // a shady css build will already have transformed selectors\n    // NOTE: This method may be called as part of static or property shimming.\n    // When there is a targeted build it will not be called for static shimming,\n    // but when the property shim is used it is called and should opt out of\n    // static shimming work when a proper build exists.\n    let cssText = '';\n    if (nativeShadow || cssBuildType === 'shady') {\n      cssText = StyleUtil.toCssText(styleRules, callback);\n    } else {\n      let {is, typeExtension} = StyleUtil.getIsExtends(element);\n      cssText = this.css(styleRules, is, typeExtension, callback) + '\\n\\n';\n    }\n    return cssText.trim();\n  }\n\n  // Given a string of cssText and a scoping string (scope), returns\n  // a string of scoped css where each selector is transformed to include\n  // a class created from the scope. ShadowDOM selectors are also transformed\n  // (e.g. :host) to use the scoping selector.\n  css(rules, scope, ext, callback) {\n    let hostScope = this._calcHostScope(scope, ext);\n    scope = this._calcElementScope(scope);\n    let self = this;\n    return StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      if (!rule.isScoped) {\n        self.rule(rule, scope, hostScope);\n        rule.isScoped = true;\n      }\n      if (callback) {\n        callback(rule, scope, hostScope);\n      }\n    });\n  }\n\n  _calcElementScope(scope) {\n    if (scope) {\n      return CSS_CLASS_PREFIX + scope;\n    } else {\n      return '';\n    }\n  }\n\n  _calcHostScope(scope, ext) {\n    return ext ? `[is=${scope}]` : scope;\n  }\n\n  rule(rule, scope, hostScope) {\n    this._transformRule(rule, this._transformComplexSelector,\n      scope, hostScope);\n  }\n\n  /**\n   * transforms a css rule to a scoped rule.\n   *\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRule(rule, transformer, scope, hostScope) {\n    // NOTE: save transformedSelector for subsequent matching of elements\n    // against selectors (e.g. when calculating style properties)\n    rule['selector'] = rule.transformedSelector =\n      this._transformRuleCss(rule, transformer, scope, hostScope);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   * @param {Function} transformer\n   * @param {string=} scope\n   * @param {string=} hostScope\n   */\n  _transformRuleCss(rule, transformer, scope, hostScope) {\n    let p$ = rule['selector'].split(COMPLEX_SELECTOR_SEP);\n    // we want to skip transformation of rules that appear in keyframes,\n    // because they are keyframe selectors, not element selectors.\n    if (!StyleUtil.isKeyframesSelector(rule)) {\n      for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n        p$[i] = transformer.call(this, p, scope, hostScope);\n      }\n    }\n    return p$.join(COMPLEX_SELECTOR_SEP);\n  }\n\n  /**\n   * @param {string} selector\n   * @return {string}\n   */\n  _twiddleNthPlus(selector) {\n    return selector.replace(NTH, (m, type, inside) => {\n      if (inside.indexOf('+') > -1) {\n        inside = inside.replace(/\\+/g, '___');\n      } else if (inside.indexOf('___') > -1) {\n        inside = inside.replace(/___/g, '+');\n      }\n      return `:${type}(${inside})`;\n    });\n  }\n\n/**\n * @param {string} selector\n * @param {string} scope\n * @param {string=} hostScope\n */\n  _transformComplexSelector(selector, scope, hostScope) {\n    let stop = false;\n    selector = selector.trim();\n    // Remove spaces inside of selectors like `:nth-of-type` because it confuses SIMPLE_SELECTOR_SEP\n    let isNth = NTH.test(selector);\n    if (isNth) {\n      selector = selector.replace(NTH, (m, type, inner) => `:${type}(${inner.replace(/\\s/g, '')})`)\n      selector = this._twiddleNthPlus(selector);\n    }\n    selector = selector.replace(SLOTTED_START, `${HOST} $1`);\n    selector = selector.replace(SIMPLE_SELECTOR_SEP, (m, c, s) => {\n      if (!stop) {\n        let info = this._transformCompoundSelector(s, c, scope, hostScope);\n        stop = stop || info.stop;\n        c = info.combinator;\n        s = info.value;\n      }\n      return c + s;\n    });\n    if (isNth) {\n      selector = this._twiddleNthPlus(selector);\n    }\n    return selector;\n  }\n\n  _transformCompoundSelector(selector, combinator, scope, hostScope) {\n    // replace :host with host scoping class\n    let slottedIndex = selector.indexOf(SLOTTED);\n    if (selector.indexOf(HOST) >= 0) {\n      selector = this._transformHostSelector(selector, hostScope);\n    // replace other selectors with scoping class\n    } else if (slottedIndex !== 0) {\n      selector = scope ? this._transformSimpleSelector(selector, scope) :\n        selector;\n    }\n    // mark ::slotted() scope jump to replace with descendant selector + arg\n    // also ignore left-side combinator\n    let slotted = false;\n    if (slottedIndex >= 0) {\n      combinator = '';\n      slotted = true;\n    }\n    // process scope jumping selectors up to the scope jump and then stop\n    let stop;\n    if (slotted) {\n      stop = true;\n      if (slotted) {\n        // .zonk ::slotted(.foo) -> .zonk.scope > .foo\n        selector = selector.replace(SLOTTED_PAREN, (m, paren) => ` > ${paren}`);\n      }\n    }\n    selector = selector.replace(DIR_PAREN, (m, before, dir) =>\n      `[dir=\"${dir}\"] ${before}, ${before}[dir=\"${dir}\"]`);\n    return {value: selector, combinator, stop};\n  }\n\n  _transformSimpleSelector(selector, scope) {\n    let p$ = selector.split(PSEUDO_PREFIX);\n    p$[0] += scope;\n    return p$.join(PSEUDO_PREFIX);\n  }\n\n  // :host(...) -> scopeName...\n  _transformHostSelector(selector, hostScope) {\n    let m = selector.match(HOST_PAREN);\n    let paren = m && m[2].trim() || '';\n    if (paren) {\n      if (!paren[0].match(SIMPLE_SELECTOR_PREFIX)) {\n        // paren starts with a type selector\n        let typeSelector = paren.split(SIMPLE_SELECTOR_PREFIX)[0];\n        // if the type selector is our hostScope then avoid pre-pending it\n        if (typeSelector === hostScope) {\n          return paren;\n        // otherwise, this selector should not match in this scope so\n        // output a bogus selector.\n        } else {\n          return SELECTOR_NO_MATCH;\n        }\n      } else {\n        // make sure to do a replace here to catch selectors like:\n        // `:host(.foo)::before`\n        return selector.replace(HOST_PAREN, function(m, host, paren) {\n          return hostScope + paren;\n        });\n      }\n    // if no paren, do a straight :host replacement.\n    // TODO(sorvell): this should not strictly be necessary but\n    // it's needed to maintain support for `:host[foo]` type selectors\n    // which have been improperly used under Shady DOM. This should be\n    // deprecated.\n    } else {\n      return selector.replace(HOST, hostScope);\n    }\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  documentRule(rule) {\n    // reset selector in case this is redone.\n    rule['selector'] = rule['parsedSelector'];\n    this.normalizeRootSelector(rule);\n    this._transformRule(rule, this._transformDocumentSelector);\n  }\n\n  /**\n   * @param {StyleNode} rule\n   */\n  normalizeRootSelector(rule) {\n    if (rule['selector'] === ROOT) {\n      rule['selector'] = 'html';\n    }\n  }\n\n/**\n * @param {string} selector\n */\n  _transformDocumentSelector(selector) {\n    return selector.match(SLOTTED) ?\n      this._transformComplexSelector(selector, SCOPE_DOC_SELECTOR) :\n      this._transformSimpleSelector(selector.trim(), SCOPE_DOC_SELECTOR);\n  }\n}\n\nlet NTH = /:(nth[-\\w]+)\\(([^)]+)\\)/;\nlet SCOPE_DOC_SELECTOR = `:not(.${SCOPE_NAME})`;\nlet COMPLEX_SELECTOR_SEP = ',';\nlet SIMPLE_SELECTOR_SEP = /(^|[\\s>+~]+)((?:\\[.+?\\]|[^\\s>+~=[])+)/g;\nlet SIMPLE_SELECTOR_PREFIX = /[[.:#*]/;\nlet HOST = ':host';\nlet ROOT = ':root';\nlet SLOTTED = '::slotted';\nlet SLOTTED_START = new RegExp(`^(${SLOTTED})`);\n// NOTE: this supports 1 nested () pair for things like\n// :host(:not([selected]), more general support requires\n// parsing which seems like overkill\nlet HOST_PAREN = /(:host)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\n// similar to HOST_PAREN\nlet SLOTTED_PAREN = /(?:::slotted)(?:\\(((?:\\([^)(]*\\)|[^)(]*)+?)\\))/;\nlet DIR_PAREN = /(.*):dir\\((?:(ltr|rtl))\\)/;\nlet CSS_CLASS_PREFIX = '.';\nlet PSEUDO_PREFIX = ':';\nlet CLASS = 'class';\nlet SELECTOR_NO_MATCH = 'should_not_match';\n\nexport default new StyleTransformer()","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport {getIsExtends} from './style-util.js';\n\nexport let flush = function() {};\n\n/**\n * @param {HTMLElement} element\n * @return {!Array<string>}\n */\nfunction getClasses(element) {\n  let classes = [];\n  if (element.classList) {\n    classes = Array.from(element.classList);\n  } else if (element instanceof window['SVGElement'] && element.hasAttribute('class')) {\n    classes = element.getAttribute('class').split(/\\s+/);\n  }\n  return classes;\n}\n\n/**\n * @param {HTMLElement} element\n * @return {string}\n */\nfunction getCurrentScope(element) {\n  let classes = getClasses(element);\n  let idx = classes.indexOf(StyleTransformer.SCOPE_NAME);\n  if (idx > -1) {\n    return classes[idx + 1];\n  }\n  return '';\n}\n\n/**\n * @param {Array<MutationRecord|null>|null} mxns\n */\nfunction handler(mxns) {\n  for (let x=0; x < mxns.length; x++) {\n    let mxn = mxns[x];\n    if (mxn.target === document.documentElement ||\n      mxn.target === document.head) {\n      continue;\n    }\n    for (let i=0; i < mxn.addedNodes.length; i++) {\n      let n = mxn.addedNodes[i];\n      if (n.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      n = /** @type {HTMLElement} */(n); // eslint-disable-line no-self-assign\n      let root = n.getRootNode();\n      let currentScope = getCurrentScope(n);\n      // node was scoped, but now is in document\n      if (currentScope && root === n.ownerDocument) {\n        StyleTransformer.dom(n, currentScope, true);\n      } else if (root.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        let newScope;\n        let host = /** @type {ShadowRoot} */(root).host;\n        // element may no longer be in a shadowroot\n        if (!host) {\n          continue;\n        }\n        newScope = getIsExtends(host).is;\n        if (currentScope === newScope) {\n          // make sure all the subtree elements are scoped correctly\n          let unscoped = window['ShadyDOM']['nativeMethods']['querySelectorAll'].call(\n            n, `:not(.${StyleTransformer.SCOPE_NAME})`);\n          for (let j = 0; j < unscoped.length; j++) {\n            StyleTransformer.element(unscoped[j], currentScope);\n          }\n          continue;\n        }\n        if (currentScope) {\n          StyleTransformer.dom(n, currentScope, true);\n        }\n        StyleTransformer.dom(n, newScope);\n      }\n    }\n  }\n}\n\nif (!nativeShadow) {\n  let observer = new MutationObserver(handler);\n  let start = (node) => {\n    observer.observe(node, {childList: true, subtree: true});\n  }\n  let nativeCustomElements = (window['customElements'] &&\n    !window['customElements']['polyfillWrapFlushCallback']);\n  // need to start immediately with native custom elements\n  // TODO(dfreedm): with polyfilled HTMLImports and native custom elements\n  // excessive mutations may be observed; this can be optimized via cooperation\n  // with the HTMLImports polyfill.\n  if (nativeCustomElements) {\n    start(document);\n  } else {\n    let delayedStart = () => {\n      start(document.body);\n    }\n    // use polyfill timing if it's available\n    if (window['HTMLImports']) {\n      window['HTMLImports']['whenReady'](delayedStart);\n    // otherwise push beyond native imports being ready\n    // which requires RAF + readystate interactive.\n    } else {\n      requestAnimationFrame(function() {\n        if (document.readyState === 'loading') {\n          let listener = function() {\n            delayedStart();\n            document.removeEventListener('readystatechange', listener);\n          }\n          document.addEventListener('readystatechange', listener);\n        } else {\n          delayedStart();\n        }\n      });\n    }\n  }\n\n  flush = function() {\n    handler(observer.takeRecords());\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\n\n/** @const {string} */\nconst infoKey = '__styleInfo';\n\nexport default class StyleInfo {\n  /**\n   * @param {Element} node\n   * @return {StyleInfo}\n   */\n  static get(node) {\n    if (node) {\n      return node[infoKey];\n    } else {\n      return null;\n    }\n  }\n  /**\n   * @param {!Element} node\n   * @param {StyleInfo} styleInfo\n   * @return {StyleInfo}\n   */\n  static set(node, styleInfo) {\n    node[infoKey] = styleInfo;\n    return styleInfo;\n  }\n  /**\n   * @param {StyleNode} ast\n   * @param {Node=} placeholder\n   * @param {Array<string>=} ownStylePropertyNames\n   * @param {string=} elementName\n   * @param {string=} typeExtension\n   * @param {string=} cssBuild\n   */\n  constructor(ast, placeholder, ownStylePropertyNames, elementName, typeExtension, cssBuild) {\n    /** @type {StyleNode} */\n    this.styleRules = ast || null;\n    /** @type {Node} */\n    this.placeholder = placeholder || null;\n    /** @type {!Array<string>} */\n    this.ownStylePropertyNames = ownStylePropertyNames || [];\n    /** @type {Array<Object>} */\n    this.overrideStyleProperties = null;\n    /** @type {string} */\n    this.elementName = elementName || '';\n    /** @type {string} */\n    this.cssBuild = cssBuild || '';\n    /** @type {string} */\n    this.typeExtension = typeExtension || '';\n    /** @type {Object<string, string>} */\n    this.styleProperties = null;\n    /** @type {?string} */\n    this.scopeSelector = null;\n    /** @type {HTMLStyleElement} */\n    this.customStyle = null;\n  }\n  _getStyleRules() {\n    return this.styleRules;\n  }\n}\n\nStyleInfo.prototype['_getStyleRules'] = StyleInfo.prototype._getStyleRules;","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {removeCustomPropAssignment, StyleNode} from './css-parse.js'; // eslint-disable-line no-unused-vars\nimport {nativeShadow} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport * as RX from './common-regex.js';\nimport StyleInfo from './style-info.js';\n\n// TODO: dedupe with shady\n/**\n * @param {string} selector\n * @return {boolean}\n * @this {Element}\n */\nconst matchesSelector = function(selector) {\n  const method = this.matches || this.matchesSelector ||\n    this.mozMatchesSelector || this.msMatchesSelector ||\n    this.oMatchesSelector || this.webkitMatchesSelector;\n  return method && method.call(this, selector);\n};\n\nconst IS_IE = navigator.userAgent.match('Trident');\n\nconst XSCOPE_NAME = 'x-scope';\n\nclass StyleProperties {\n  get XSCOPE_NAME() {\n    return XSCOPE_NAME;\n  }\n/**\n * decorates styles with rule info and returns an array of used style property names\n *\n * @param {StyleNode} rules\n * @return {Array<string>}\n */\n  decorateStyles(rules) {\n    let self = this, props = {}, keyframes = [], ruleIndex = 0;\n    StyleUtil.forEachRule(rules, function(rule) {\n      self.decorateRule(rule);\n      // mark in-order position of ast rule in styles block, used for cache key\n      rule.index = ruleIndex++;\n      self.collectPropertiesInCssText(rule.propertyInfo.cssText, props);\n    }, function onKeyframesRule(rule) {\n      keyframes.push(rule);\n    });\n    // Cache all found keyframes rules for later reference:\n    rules._keyframes = keyframes;\n    // return this list of property names *consumes* in these styles.\n    let names = [];\n    for (let i in props) {\n      names.push(i);\n    }\n    return names;\n  }\n\n  // decorate a single rule with property info\n  decorateRule(rule) {\n    if (rule.propertyInfo) {\n      return rule.propertyInfo;\n    }\n    let info = {}, properties = {};\n    let hasProperties = this.collectProperties(rule, properties);\n    if (hasProperties) {\n      info.properties = properties;\n      // TODO(sorvell): workaround parser seeing mixins as additional rules\n      rule['rules'] = null;\n    }\n    info.cssText = this.collectCssText(rule);\n    rule.propertyInfo = info;\n    return info;\n  }\n\n  // collects the custom properties from a rule's cssText\n  collectProperties(rule, properties) {\n    let info = rule.propertyInfo;\n    if (info) {\n      if (info.properties) {\n        Object.assign(properties, info.properties);\n        return true;\n      }\n    } else {\n      let m, rx = RX.VAR_ASSIGN;\n      let cssText = rule['parsedCssText'];\n      let value;\n      let any;\n      while ((m = rx.exec(cssText))) {\n        // note: group 2 is var, 3 is mixin\n        value = (m[2] || m[3]).trim();\n        // value of 'inherit' or 'unset' is equivalent to not setting the property here\n        if (value !== 'inherit' || value !== 'unset') {\n          properties[m[1].trim()] = value;\n        }\n        any = true;\n      }\n      return any;\n    }\n\n  }\n\n  // returns cssText of properties that consume variables/mixins\n  collectCssText(rule) {\n    return this.collectConsumingCssText(rule['parsedCssText']);\n  }\n\n  // NOTE: we support consumption inside mixin assignment\n  // but not production, so strip out {...}\n  collectConsumingCssText(cssText) {\n    return cssText.replace(RX.BRACKETED, '')\n      .replace(RX.VAR_ASSIGN, '');\n  }\n\n  collectPropertiesInCssText(cssText, props) {\n    let m;\n    while ((m = RX.VAR_CONSUMED.exec(cssText))) {\n      let name = m[1];\n      // This regex catches all variable names, and following non-whitespace char\n      // If next char is not ':', then variable is a consumer\n      if (m[2] !== ':') {\n        props[name] = true;\n      }\n    }\n  }\n\n  // turns custom properties into realized values.\n  reify(props) {\n    // big perf optimization here: reify only *own* properties\n    // since this object has __proto__ of the element's scope properties\n    let names = Object.getOwnPropertyNames(props);\n    for (let i=0, n; i < names.length; i++) {\n      n = names[i];\n      props[n] = this.valueForProperty(props[n], props);\n    }\n  }\n\n  // given a property value, returns the reified value\n  // a property value may be:\n  // (1) a literal value like: red or 5px;\n  // (2) a variable value like: var(--a), var(--a, red), or var(--a, --b) or\n  // var(--a, var(--b));\n  // (3) a literal mixin value like { properties }. Each of these properties\n  // can have values that are: (a) literal, (b) variables, (c) @apply mixins.\n  valueForProperty(property, props) {\n    // case (1) default\n    // case (3) defines a mixin and we have to reify the internals\n    if (property) {\n      if (property.indexOf(';') >=0) {\n        property = this.valueForProperties(property, props);\n      } else {\n        // case (2) variable\n        let self = this;\n        let fn = function(prefix, value, fallback, suffix) {\n          if (!value) {\n            return prefix + suffix;\n          }\n          let propertyValue = self.valueForProperty(props[value], props);\n          // if value is \"initial\", then the variable should be treated as unset\n          if (!propertyValue || propertyValue === 'initial') {\n            // fallback may be --a or var(--a) or literal\n            propertyValue = self.valueForProperty(props[fallback] || fallback, props) ||\n            fallback;\n          } else if (propertyValue === 'apply-shim-inherit') {\n            // CSS build will replace `inherit` with `apply-shim-inherit`\n            // for use with native css variables.\n            // Since we have full control, we can use `inherit` directly.\n            propertyValue = 'inherit';\n          }\n          return prefix + (propertyValue || '') + suffix;\n        };\n        property = StyleUtil.processVariableAndFallback(property, fn);\n      }\n    }\n    return property && property.trim() || '';\n  }\n\n  // note: we do not yet support mixin within mixin\n  valueForProperties(property, props) {\n    let parts = property.split(';');\n    for (let i=0, p, m; i<parts.length; i++) {\n      if ((p = parts[i])) {\n        RX.MIXIN_MATCH.lastIndex = 0;\n        m = RX.MIXIN_MATCH.exec(p);\n        if (m) {\n          p = this.valueForProperty(props[m[1]], props);\n        } else {\n          let colon = p.indexOf(':');\n          if (colon !== -1) {\n            let pp = p.substring(colon);\n            pp = pp.trim();\n            pp = this.valueForProperty(pp, props) || pp;\n            p = p.substring(0, colon) + pp;\n          }\n        }\n        parts[i] = (p && p.lastIndexOf(';') === p.length - 1) ?\n          // strip trailing ;\n          p.slice(0, -1) :\n          p || '';\n      }\n    }\n    return parts.join(';');\n  }\n\n  applyProperties(rule, props) {\n    let output = '';\n    // dynamically added sheets may not be decorated so ensure they are.\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (rule.propertyInfo.cssText) {\n      output = this.valueForProperties(rule.propertyInfo.cssText, props);\n    }\n    rule['cssText'] = output;\n  }\n\n  // Apply keyframe transformations to the cssText of a given rule. The\n  // keyframeTransforms object is a map of keyframe names to transformer\n  // functions which take in cssText and spit out transformed cssText.\n  applyKeyframeTransforms(rule, keyframeTransforms) {\n    let input = rule['cssText'];\n    let output = rule['cssText'];\n    if (rule.hasAnimations == null) {\n      // Cache whether or not the rule has any animations to begin with:\n      rule.hasAnimations = RX.ANIMATION_MATCH.test(input);\n    }\n    // If there are no animations referenced, we can skip transforms:\n    if (rule.hasAnimations) {\n      let transform;\n      // If we haven't transformed this rule before, we iterate over all\n      // transforms:\n      if (rule.keyframeNamesToTransform == null) {\n        rule.keyframeNamesToTransform = [];\n        for (let keyframe in keyframeTransforms) {\n          transform = keyframeTransforms[keyframe];\n          output = transform(input);\n          // If the transform actually changed the CSS text, we cache the\n          // transform name for future use:\n          if (input !== output) {\n            input = output;\n            rule.keyframeNamesToTransform.push(keyframe);\n          }\n        }\n      } else {\n        // If we already have a list of keyframe names that apply to this\n        // rule, we apply only those keyframe name transforms:\n        for (let i = 0; i < rule.keyframeNamesToTransform.length; ++i) {\n          transform = keyframeTransforms[rule.keyframeNamesToTransform[i]];\n          input = transform(input);\n        }\n        output = input;\n      }\n    }\n    rule['cssText'] = output;\n  }\n\n  // Test if the rules in these styles matches the given `element` and if so,\n  // collect any custom properties into `props`.\n  /**\n   * @param {StyleNode} rules\n   * @param {Element} element\n   */\n  propertyDataFromStyles(rules, element) {\n    let props = {}, self = this;\n    // generates a unique key for these matches\n    let o = [];\n    // note: active rules excludes non-matching @media rules\n    StyleUtil.forEachRule(rules, function(rule) {\n      // TODO(sorvell): we could trim the set of rules at declaration\n      // time to only include ones that have properties\n      if (!rule.propertyInfo) {\n        self.decorateRule(rule);\n      }\n      // match element against transformedSelector: selector may contain\n      // unwanted uniquification and parsedSelector does not directly match\n      // for :host selectors.\n      let selectorToMatch = rule.transformedSelector || rule['parsedSelector'];\n      if (element && rule.propertyInfo.properties && selectorToMatch) {\n        if (matchesSelector.call(element, selectorToMatch)) {\n          self.collectProperties(rule, props);\n          // produce numeric key for these matches for lookup\n          addToBitMask(rule.index, o);\n        }\n      }\n    }, null, true);\n    return {properties: props, key: o};\n  }\n\n  /**\n   * @param {Element} scope\n   * @param {StyleNode} rule\n   * @param {string|undefined} cssBuild\n   * @param {function(Object)} callback\n   */\n  whenHostOrRootRule(scope, rule, cssBuild, callback) {\n    if (!rule.propertyInfo) {\n      this.decorateRule(rule);\n    }\n    if (!rule.propertyInfo.properties) {\n      return;\n    }\n    let {is, typeExtension} = StyleUtil.getIsExtends(scope);\n    let hostScope = is ?\n      StyleTransformer._calcHostScope(is, typeExtension) :\n      'html';\n    let parsedSelector = rule['parsedSelector'];\n    let isRoot = (parsedSelector === ':host > *' || parsedSelector === 'html');\n    let isHost = parsedSelector.indexOf(':host') === 0 && !isRoot;\n    // build info is either in scope (when scope is an element) or in the style\n    // when scope is the default scope; note: this allows default scope to have\n    // mixed mode built and unbuilt styles.\n    if (cssBuild === 'shady') {\n      // :root -> x-foo > *.x-foo for elements and html for custom-style\n      isRoot = parsedSelector === (hostScope + ' > *.' + hostScope) || parsedSelector.indexOf('html') !== -1;\n      // :host -> x-foo for elements, but sub-rules have .x-foo in them\n      isHost = !isRoot && parsedSelector.indexOf(hostScope) === 0;\n    }\n    if (cssBuild === 'shadow') {\n      isRoot = parsedSelector === ':host > *' || parsedSelector === 'html';\n      isHost = isHost && !isRoot;\n    }\n    if (!isRoot && !isHost) {\n      return;\n    }\n    let selectorToMatch = hostScope;\n    if (isHost) {\n      // need to transform :host because `:host` does not work with `matches`\n      if (!rule.transformedSelector) {\n        // transform :host into a matchable selector\n        rule.transformedSelector =\n        StyleTransformer._transformRuleCss(\n          rule,\n          StyleTransformer._transformComplexSelector,\n          StyleTransformer._calcElementScope(is),\n          hostScope\n        );\n      }\n      selectorToMatch = rule.transformedSelector || hostScope;\n    }\n    callback({\n      selector: selectorToMatch,\n      isHost: isHost,\n      isRoot: isRoot\n    });\n  }\n/**\n * @param {Element} scope\n * @param {StyleNode} rules\n * @return {Object}\n */\n  hostAndRootPropertiesForScope(scope, rules) {\n    let hostProps = {}, rootProps = {}, self = this;\n    // note: active rules excludes non-matching @media rules\n    let cssBuild = rules && rules['__cssBuild'];\n    StyleUtil.forEachRule(rules, function(rule) {\n      // if scope is StyleDefaults, use _element for matchesSelector\n      self.whenHostOrRootRule(scope, rule, cssBuild, function(info) {\n        let element = scope._element || scope;\n        if (matchesSelector.call(element, info.selector)) {\n          if (info.isHost) {\n            self.collectProperties(rule, hostProps);\n          } else {\n            self.collectProperties(rule, rootProps);\n          }\n        }\n      });\n    }, null, true);\n    return {rootProps: rootProps, hostProps: hostProps};\n  }\n\n  /**\n   * @param {Element} element\n   * @param {Object} properties\n   * @param {string} scopeSelector\n   */\n  transformStyles(element, properties, scopeSelector) {\n    let self = this;\n    let {is, typeExtension} = StyleUtil.getIsExtends(element);\n    let hostSelector = StyleTransformer\n      ._calcHostScope(is, typeExtension);\n    let rxHostSelector = element.extends ?\n      '\\\\' + hostSelector.slice(0, -1) + '\\\\]' :\n      hostSelector;\n    let hostRx = new RegExp(RX.HOST_PREFIX + rxHostSelector +\n      RX.HOST_SUFFIX);\n    let rules = StyleInfo.get(element).styleRules;\n    let keyframeTransforms =\n      this._elementKeyframeTransforms(element, rules, scopeSelector);\n    return StyleTransformer.elementStyles(element, rules, function(rule) {\n      self.applyProperties(rule, properties);\n      if (!nativeShadow &&\n          !StyleUtil.isKeyframesSelector(rule) &&\n          rule['cssText']) {\n        // NOTE: keyframe transforms only scope munge animation names, so it\n        // is not necessary to apply them in ShadowDOM.\n        self.applyKeyframeTransforms(rule, keyframeTransforms);\n        self._scopeSelector(rule, hostRx, hostSelector, scopeSelector);\n      }\n    });\n  }\n\n  /**\n   * @param {Element} element\n   * @param {StyleNode} rules\n   * @param {string} scopeSelector\n   * @return {Object}\n   */\n  _elementKeyframeTransforms(element, rules, scopeSelector) {\n    let keyframesRules = rules._keyframes;\n    let keyframeTransforms = {};\n    if (!nativeShadow && keyframesRules) {\n      // For non-ShadowDOM, we transform all known keyframes rules in\n      // advance for the current scope. This allows us to catch keyframes\n      // rules that appear anywhere in the stylesheet:\n      for (let i = 0, keyframesRule = keyframesRules[i];\n           i < keyframesRules.length;\n           keyframesRule = keyframesRules[++i]) {\n        this._scopeKeyframes(keyframesRule, scopeSelector);\n        keyframeTransforms[keyframesRule['keyframesName']] =\n            this._keyframesRuleTransformer(keyframesRule);\n      }\n    }\n    return keyframeTransforms;\n  }\n\n  // Generate a factory for transforming a chunk of CSS text to handle a\n  // particular scoped keyframes rule.\n  /**\n   * @param {StyleNode} keyframesRule\n   * @return {function(string):string}\n   */\n  _keyframesRuleTransformer(keyframesRule) {\n    return function(cssText) {\n      return cssText.replace(\n          keyframesRule.keyframesNameRx,\n          keyframesRule.transformedKeyframesName);\n    };\n  }\n\n/**\n * Transforms `@keyframes` names to be unique for the current host.\n * Example: @keyframes foo-anim -> @keyframes foo-anim-x-foo-0\n *\n * @param {StyleNode} rule\n * @param {string} scopeId\n */\n  _scopeKeyframes(rule, scopeId) {\n    // Animation names are of the form [\\w-], so ensure that the name regex does not partially apply\n    // to similarly named keyframe names by checking for a word boundary at the beginning and\n    // a non-word boundary or `-` at the end.\n    rule.keyframesNameRx = new RegExp(`\\\\b${rule['keyframesName']}(?!\\\\B|-)`, 'g');\n    rule.transformedKeyframesName = rule['keyframesName'] + '-' + scopeId;\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    rule['selector'] = rule.transformedSelector.replace(\n        rule['keyframesName'], rule.transformedKeyframesName);\n  }\n\n  // Strategy: x scope shim a selector e.g. to scope `.x-foo-42` (via classes):\n  // non-host selector: .a.x-foo -> .x-foo-42 .a.x-foo\n  // host selector: x-foo.wide -> .x-foo-42.wide\n  // note: we use only the scope class (.x-foo-42) and not the hostSelector\n  // (x-foo) to scope :host rules; this helps make property host rules\n  // have low specificity. They are overrideable by class selectors but,\n  // unfortunately, not by type selectors (e.g. overriding via\n  // `.special` is ok, but not by `x-foo`).\n  /**\n   * @param {StyleNode} rule\n   * @param {RegExp} hostRx\n   * @param {string} hostSelector\n   * @param {string} scopeId\n   */\n  _scopeSelector(rule, hostRx, hostSelector, scopeId) {\n    rule.transformedSelector = rule.transformedSelector || rule['selector'];\n    let selector = rule.transformedSelector;\n    let scope = '.' + scopeId;\n    let parts = selector.split(',');\n    for (let i=0, l=parts.length, p; (i<l) && (p=parts[i]); i++) {\n      parts[i] = p.match(hostRx) ?\n        p.replace(hostSelector, scope) :\n        scope + ' ' + p;\n    }\n    rule['selector'] = parts.join(',');\n  }\n\n  /**\n   * @param {Element} element\n   * @param {string} selector\n   * @param {string} old\n   */\n  applyElementScopeSelector(element, selector, old) {\n    let c = element.getAttribute('class') || '';\n    let v = c;\n    if (old) {\n      v = c.replace(\n        new RegExp('\\\\s*' + XSCOPE_NAME + '\\\\s*' + old + '\\\\s*', 'g'), ' ');\n    }\n    v += (v ? ' ' : '') + XSCOPE_NAME + ' ' + selector;\n    if (c !== v) {\n      StyleUtil.setElementClassRaw(element, v);\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @param {string} selector\n   * @param {HTMLStyleElement} style\n   * @return {HTMLStyleElement}\n   */\n  applyElementStyle(element, properties, selector, style) {\n    // calculate cssText to apply\n    let cssText = style ? style.textContent || '' :\n      this.transformStyles(element, properties, selector);\n    // if shady and we have a cached style that is not style, decrement\n    let styleInfo = StyleInfo.get(element);\n    let s = styleInfo.customStyle;\n    if (s && !nativeShadow && (s !== style)) {\n      s['_useCount']--;\n      if (s['_useCount'] <= 0 && s.parentNode) {\n        s.parentNode.removeChild(s);\n      }\n    }\n    // apply styling always under native or if we generated style\n    // or the cached style is not in document(!)\n    if (nativeShadow) {\n      // update existing style only under native\n      if (styleInfo.customStyle) {\n        styleInfo.customStyle.textContent = cssText;\n        style = styleInfo.customStyle;\n      // otherwise, if we have css to apply, do so\n      } else if (cssText) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        style = StyleUtil.applyCss(cssText, selector, element.shadowRoot,\n          styleInfo.placeholder);\n      }\n    } else {\n      // shady and no cache hit\n      if (!style) {\n        // apply css after the scope style of the element to help with\n        // style precedence rules.\n        if (cssText) {\n          style = StyleUtil.applyCss(cssText, selector, null,\n            styleInfo.placeholder);\n        }\n      // shady and cache hit but not in document\n      } else if (!style.parentNode) {\n        if (IS_IE && cssText.indexOf('@media') > -1) {\n            // @media rules may be stale in IE 10 and 11\n            // refresh the text content of the style to revalidate them.\n          style.textContent = cssText;\n        }\n        StyleUtil.applyStyle(style, null, styleInfo.placeholder);\n      }\n    }\n    // ensure this style is our custom style and increment its use count.\n    if (style) {\n      style['_useCount'] = style['_useCount'] || 0;\n      // increment use count if we changed styles\n      if (styleInfo.customStyle != style) {\n        style['_useCount']++;\n      }\n      styleInfo.customStyle = style;\n    }\n    return style;\n  }\n\n  /**\n   * @param {Element} style\n   * @param {Object} properties\n   */\n  applyCustomStyle(style, properties) {\n    let rules = StyleUtil.rulesForStyle(/** @type {HTMLStyleElement} */(style));\n    let self = this;\n    style.textContent = StyleUtil.toCssText(rules, function(/** StyleNode */rule) {\n      let css = rule['cssText'] = rule['parsedCssText'];\n      if (rule.propertyInfo && rule.propertyInfo.cssText) {\n        // remove property assignments\n        // so next function isn't confused\n        // NOTE: we have 3 categories of css:\n        // (1) normal properties,\n        // (2) custom property assignments (--foo: red;),\n        // (3) custom property usage: border: var(--foo); @apply(--foo);\n        // In elements, 1 and 3 are separated for efficiency; here they\n        // are not and this makes this case unique.\n        css = removeCustomPropAssignment(/** @type {string} */(css));\n        // replace with reified properties, scenario is same as mixin\n        rule['cssText'] = self.valueForProperties(css, properties);\n      }\n    });\n  }\n}\n\n/**\n * @param {number} n\n * @param {Array<number>} bits\n */\nfunction addToBitMask(n, bits) {\n  let o = parseInt(n / 32, 10);\n  let v = 1 << (n % 32);\n  bits[o] = (bits[o] || 0) | v;\n}\n\nexport default new StyleProperties();","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {applyStylePlaceHolder} from './style-util.js';\nimport {nativeShadow} from './style-settings.js';\n\n/** @type {Object<string, !Node>} */\nlet placeholderMap = {};\n\n/**\n * @const {CustomElementRegistry}\n */\nconst ce = window['customElements'];\nif (ce && !nativeShadow) {\n  /**\n   * @const {function(this:CustomElementRegistry, string,function(new:HTMLElement),{extends: string}=)}\n   */\n  const origDefine = ce['define'];\n  /**\n   * @param {string} name\n   * @param {function(new:HTMLElement)} clazz\n   * @param {{extends: string}=} options\n   * @return {function(new:HTMLElement)}\n   */\n  const wrappedDefine = (name, clazz, options) => {\n    placeholderMap[name] = applyStylePlaceHolder(name);\n    return origDefine.call(/** @type {!CustomElementRegistry} */(ce), name, clazz, options);\n  }\n  ce['define'] = wrappedDefine;\n}\n\nexport default placeholderMap;\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {parse, StyleNode} from './css-parse.js';\nimport {nativeShadow, nativeCssVariables} from './style-settings.js';\nimport StyleTransformer from './style-transformer.js';\nimport * as StyleUtil from './style-util.js';\nimport StyleProperties from './style-properties.js';\nimport placeholderMap from './style-placeholder.js';\nimport StyleInfo from './style-info.js';\nimport StyleCache from './style-cache.js';\nimport {flush as watcherFlush} from './document-watcher.js';\nimport templateMap from './template-map.js';\nimport * as ApplyShimUtils from './apply-shim-utils.js';\nimport documentWait from './document-wait.js';\nimport {updateNativeProperties, detectMixin} from './common-utils.js';\nimport {CustomStyleInterfaceInterface} from './custom-style-interface.js'; // eslint-disable-line no-unused-vars\n\n/**\n * @const {StyleCache}\n */\nconst styleCache = new StyleCache();\n\nexport default class ScopingShim {\n  constructor() {\n    this._scopeCounter = {};\n    this._documentOwner = document.documentElement;\n    let ast = new StyleNode();\n    ast['rules'] = [];\n    this._documentOwnerStyleInfo = StyleInfo.set(this._documentOwner, new StyleInfo(ast));\n    this._elementsHaveApplied = false;\n    this._applyShim = null;\n    /** @type {?CustomStyleInterfaceInterface} */\n    this._customStyleInterface = null;\n    documentWait(() => {\n      this._ensure();\n    });\n  }\n  flush() {\n    watcherFlush();\n  }\n  _generateScopeSelector(name) {\n    let id = this._scopeCounter[name] = (this._scopeCounter[name] || 0) + 1;\n    return `${name}-${id}`;\n  }\n  getStyleAst(style) {\n    return StyleUtil.rulesForStyle(style);\n  }\n  styleAstToString(ast) {\n    return StyleUtil.toCssText(ast);\n  }\n  _gatherStyles(template) {\n    return StyleUtil.gatherStyleText(template.content);\n  }\n  _getCssBuild(template) {\n    let style = template.content.querySelector('style');\n    if (!style) {\n      return '';\n    }\n    return style.getAttribute('css-build') || '';\n  }\n  /**\n   * Prepare the styling and template for the given element type\n   *\n   * @param {HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} typeExtension\n   */\n  prepareTemplate(template, elementName, typeExtension) {\n    if (template._prepared) {\n      return;\n    }\n    template._prepared = true;\n    template.name = elementName;\n    template.extends = typeExtension;\n    templateMap[elementName] = template;\n    let cssBuild = this._getCssBuild(template);\n    let cssText = this._gatherStyles(template);\n    let info = {\n      is: elementName,\n      extends: typeExtension,\n      __cssBuild: cssBuild,\n    };\n    if (!nativeShadow) {\n      StyleTransformer.dom(template.content, elementName);\n    }\n    // check if the styling has mixin definitions or uses\n    this._ensure();\n    let hasMixins = detectMixin(cssText)\n    let ast = parse(cssText);\n    // only run the applyshim transforms if there is a mixin involved\n    if (hasMixins && nativeCssVariables && this._applyShim) {\n      this._applyShim['transformRules'](ast, elementName);\n    }\n    template['_styleAst'] = ast;\n    template._cssBuild = cssBuild;\n\n    let ownPropertyNames = [];\n    if (!nativeCssVariables) {\n      ownPropertyNames = StyleProperties.decorateStyles(template['_styleAst'], info);\n    }\n    if (!ownPropertyNames.length || nativeCssVariables) {\n      let root = nativeShadow ? template.content : null;\n      let placeholder = placeholderMap[elementName];\n      let style = this._generateStaticStyle(info, template['_styleAst'], root, placeholder);\n      template._style = style;\n    }\n    template._ownPropertyNames = ownPropertyNames;\n  }\n  _generateStaticStyle(info, rules, shadowroot, placeholder) {\n    let cssText = StyleTransformer.elementStyles(info, rules);\n    if (cssText.length) {\n      return StyleUtil.applyCss(cssText, info.is, shadowroot, placeholder);\n    }\n  }\n  _prepareHost(host) {\n    let {is, typeExtension} = StyleUtil.getIsExtends(host);\n    let placeholder = placeholderMap[is];\n    let template = templateMap[is];\n    let ast;\n    let ownStylePropertyNames;\n    let cssBuild;\n    if (template) {\n      ast = template['_styleAst'];\n      ownStylePropertyNames = template._ownPropertyNames;\n      cssBuild = template._cssBuild;\n    }\n    return StyleInfo.set(host,\n      new StyleInfo(\n        ast,\n        placeholder,\n        ownStylePropertyNames,\n        is,\n        typeExtension,\n        cssBuild\n      )\n    );\n  }\n  _ensureApplyShim() {\n    if (this._applyShim) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.ApplyShim) {\n      this._applyShim = window.ShadyCSS.ApplyShim;\n      this._applyShim['invalidCallback'] = ApplyShimUtils.invalidate;\n    }\n  }\n  _ensureCustomStyleInterface() {\n    if (this._customStyleInterface) {\n      return;\n    } else if (window.ShadyCSS && window.ShadyCSS.CustomStyleInterface) {\n      this._customStyleInterface = /** @type {!CustomStyleInterfaceInterface} */(window.ShadyCSS.CustomStyleInterface);\n      /** @type {function(!HTMLStyleElement)} */\n      this._customStyleInterface['transformCallback'] = (style) => {this.transformCustomStyleForDocument(style)};\n      this._customStyleInterface['validateCallback'] = () => {\n        requestAnimationFrame(() => {\n          if (this._customStyleInterface['enqueued'] || this._elementsHaveApplied) {\n            this.flushCustomStyles();\n          }\n        })\n      };\n    }\n  }\n  _ensure() {\n    this._ensureApplyShim();\n    this._ensureCustomStyleInterface();\n  }\n  /**\n   * Flush and apply custom styles to document\n   */\n  flushCustomStyles() {\n    this._ensure();\n    if (!this._customStyleInterface) {\n      return;\n    }\n    let customStyles = this._customStyleInterface['processStyles']();\n    // early return if custom-styles don't need validation\n    if (!this._customStyleInterface['enqueued']) {\n      return;\n    }\n    if (!nativeCssVariables) {\n      this._updateProperties(this._documentOwner, this._documentOwnerStyleInfo);\n      this._applyCustomStyles(customStyles);\n    } else {\n      this._revalidateCustomStyleApplyShim(customStyles);\n    }\n    this._customStyleInterface['enqueued'] = false;\n    // if custom elements have upgraded and there are no native css variables, we must recalculate the whole tree\n    if (this._elementsHaveApplied && !nativeCssVariables) {\n      this.styleDocument();\n    }\n  }\n  /**\n   * Apply styles for the given element\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} overrideProps\n   */\n  styleElement(host, overrideProps) {\n    let {is} = StyleUtil.getIsExtends(host);\n    let styleInfo = StyleInfo.get(host);\n    if (!styleInfo) {\n      styleInfo = this._prepareHost(host);\n    }\n    // Only trip the `elementsHaveApplied` flag if a node other that the root document has `applyStyle` called\n    if (!this._isRootOwner(host)) {\n      this._elementsHaveApplied = true;\n    }\n    if (overrideProps) {\n      styleInfo.overrideStyleProperties =\n        styleInfo.overrideStyleProperties || {};\n      Object.assign(styleInfo.overrideStyleProperties, overrideProps);\n    }\n    if (!nativeCssVariables) {\n     this._updateProperties(host, styleInfo);\n      if (styleInfo.ownStylePropertyNames && styleInfo.ownStylePropertyNames.length) {\n        this._applyStyleProperties(host, styleInfo);\n      }\n    } else {\n      if (styleInfo.overrideStyleProperties) {\n        updateNativeProperties(host, styleInfo.overrideStyleProperties);\n      }\n      let template = templateMap[is];\n      // bail early if there is no shadowroot for this element\n      if (!template && !this._isRootOwner(host)) {\n        return;\n      }\n      if (template && template._style && !ApplyShimUtils.templateIsValid(template)) {\n        // update template\n        if (!ApplyShimUtils.templateIsValidating(template)) {\n          this._ensure();\n          this._applyShim && this._applyShim['transformRules'](template['_styleAst'], is);\n          template._style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          ApplyShimUtils.startValidatingTemplate(template);\n        }\n        // update instance if native shadowdom\n        if (nativeShadow) {\n          let root = host.shadowRoot;\n          if (root) {\n            let style = root.querySelector('style');\n            style.textContent = StyleTransformer.elementStyles(host, styleInfo.styleRules);\n          }\n        }\n        styleInfo.styleRules = template['_styleAst'];\n      }\n    }\n  }\n  _styleOwnerForNode(node) {\n    let root = node.getRootNode();\n    let host = root.host;\n    if (host) {\n      if (StyleInfo.get(host)) {\n        return host;\n      } else {\n        return this._styleOwnerForNode(host);\n      }\n    }\n    return this._documentOwner;\n  }\n  _isRootOwner(node) {\n    return (node === this._documentOwner);\n  }\n  _applyStyleProperties(host, styleInfo) {\n    let is = StyleUtil.getIsExtends(host).is;\n    let cacheEntry = styleCache.fetch(is, styleInfo.styleProperties, styleInfo.ownStylePropertyNames);\n    let cachedScopeSelector = cacheEntry && cacheEntry.scopeSelector;\n    let cachedStyle = cacheEntry ? cacheEntry.styleElement : null;\n    let oldScopeSelector = styleInfo.scopeSelector;\n    // only generate new scope if cached style is not found\n    styleInfo.scopeSelector = cachedScopeSelector || this._generateScopeSelector(is);\n    let style = StyleProperties.applyElementStyle(host, styleInfo.styleProperties, styleInfo.scopeSelector, cachedStyle);\n    if (!nativeShadow) {\n      StyleProperties.applyElementScopeSelector(host, styleInfo.scopeSelector, oldScopeSelector);\n    }\n    if (!cacheEntry) {\n      styleCache.store(is, styleInfo.styleProperties, style, styleInfo.scopeSelector);\n    }\n    return style;\n  }\n  _updateProperties(host, styleInfo) {\n    let owner = this._styleOwnerForNode(host);\n    let ownerStyleInfo = StyleInfo.get(owner);\n    let ownerProperties = ownerStyleInfo.styleProperties;\n    let props = Object.create(ownerProperties || null);\n    let hostAndRootProps = StyleProperties.hostAndRootPropertiesForScope(host, styleInfo.styleRules);\n    let propertyData = StyleProperties.propertyDataFromStyles(ownerStyleInfo.styleRules, host);\n    let propertiesMatchingHost = propertyData.properties\n    Object.assign(\n      props,\n      hostAndRootProps.hostProps,\n      propertiesMatchingHost,\n      hostAndRootProps.rootProps\n    );\n    this._mixinOverrideStyles(props, styleInfo.overrideStyleProperties);\n    StyleProperties.reify(props);\n    styleInfo.styleProperties = props;\n  }\n  _mixinOverrideStyles(props, overrides) {\n    for (let p in overrides) {\n      let v = overrides[p];\n      // skip override props if they are not truthy or 0\n      // in order to fall back to inherited values\n      if (v || v === 0) {\n        props[p] = v;\n      }\n    }\n  }\n  /**\n   * Update styles of the whole document\n   *\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    this.styleSubtree(this._documentOwner, properties);\n  }\n  /**\n   * Update styles of a subtree\n   *\n   * @param {!HTMLElement} host\n   * @param {Object=} properties\n   */\n  styleSubtree(host, properties) {\n    let root = host.shadowRoot;\n    if (root || this._isRootOwner(host)) {\n      this.styleElement(host, properties);\n    }\n    // process the shadowdom children of `host`\n    let shadowChildren = root && (root.children || root.childNodes);\n    if (shadowChildren) {\n      for (let i = 0; i < shadowChildren.length; i++) {\n        let c = /** @type {!HTMLElement} */(shadowChildren[i]);\n        this.styleSubtree(c);\n      }\n    } else {\n      // process the lightdom children of `host`\n      let children = host.children || host.childNodes;\n      if (children) {\n        for (let i = 0; i < children.length; i++) {\n          let c = /** @type {!HTMLElement} */(children[i]);\n          this.styleSubtree(c);\n        }\n      }\n    }\n  }\n  /* Custom Style operations */\n  _revalidateCustomStyleApplyShim(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        this._revalidateApplyShim(s);\n      }\n    }\n  }\n  _applyCustomStyles(customStyles) {\n    for (let i = 0; i < customStyles.length; i++) {\n      let c = customStyles[i];\n      let s = this._customStyleInterface['getStyleForCustomStyle'](c);\n      if (s) {\n        StyleProperties.applyCustomStyle(s, this._documentOwnerStyleInfo.styleProperties);\n      }\n    }\n  }\n  transformCustomStyleForDocument(style) {\n    let ast = StyleUtil.rulesForStyle(style);\n    StyleUtil.forEachRule(ast, (rule) => {\n      if (nativeShadow) {\n        StyleTransformer.normalizeRootSelector(rule);\n      } else {\n        StyleTransformer.documentRule(rule);\n      }\n      if (nativeCssVariables) {\n        this._ensure();\n        this._applyShim && this._applyShim['transformRule'](rule);\n      }\n    });\n    if (nativeCssVariables) {\n      style.textContent = StyleUtil.toCssText(ast);\n    } else {\n      this._documentOwnerStyleInfo.styleRules.rules.push(ast);\n    }\n  }\n  _revalidateApplyShim(style) {\n    if (nativeCssVariables && this._applyShim) {\n      let ast = StyleUtil.rulesForStyle(style);\n      this._ensure();\n      this._applyShim['transformRules'](ast);\n      style.textContent = StyleUtil.toCssText(ast);\n    }\n  }\n  getComputedStyleValue(element, property) {\n    let value;\n    if (!nativeCssVariables) {\n      // element is either a style host, or an ancestor of a style host\n      let styleInfo = StyleInfo.get(element) || StyleInfo.get(this._styleOwnerForNode(element));\n      value = styleInfo.styleProperties[property];\n    }\n    // fall back to the property value from the computed styling\n    value = value || window.getComputedStyle(element).getPropertyValue(property);\n    // trim whitespace that can come after the `:` in css\n    // example: padding: 2px -> \" 2px\"\n    return value ? value.trim() : '';\n  }\n  // given an element and a classString, replaces\n  // the element's class with the provided classString and adds\n  // any necessary ShadyCSS static and property based scoping selectors\n  setElementClass(element, classString) {\n    let root = element.getRootNode();\n    let classes = classString ? classString.split(/\\s/) : [];\n    let scopeName = root.host && root.host.localName;\n    // If no scope, try to discover scope name from existing class.\n    // This can occur if, for example, a template stamped element that\n    // has been scoped is manipulated when not in a root.\n    if (!scopeName) {\n      var classAttr = element.getAttribute('class');\n      if (classAttr) {\n        let k$ = classAttr.split(/\\s/);\n        for (let i=0; i < k$.length; i++) {\n          if (k$[i] === StyleTransformer.SCOPE_NAME) {\n            scopeName = k$[i+1];\n            break;\n          }\n        }\n      }\n    }\n    if (scopeName) {\n      classes.push(StyleTransformer.SCOPE_NAME, scopeName);\n    }\n    if (!nativeCssVariables) {\n      let styleInfo = StyleInfo.get(element);\n      if (styleInfo && styleInfo.scopeSelector) {\n        classes.push(StyleProperties.XSCOPE_NAME, styleInfo.scopeSelector);\n      }\n    }\n    StyleUtil.setElementClassRaw(element, classes.join(' '));\n  }\n  _styleInfoForNode(node) {\n    return StyleInfo.get(node);\n  }\n}\n\n/* exports */\nScopingShim.prototype['flush'] = ScopingShim.prototype.flush;\nScopingShim.prototype['prepareTemplate'] = ScopingShim.prototype.prepareTemplate;\nScopingShim.prototype['styleElement'] = ScopingShim.prototype.styleElement;\nScopingShim.prototype['styleDocument'] = ScopingShim.prototype.styleDocument;\nScopingShim.prototype['styleSubtree'] = ScopingShim.prototype.styleSubtree;\nScopingShim.prototype['getComputedStyleValue'] = ScopingShim.prototype.getComputedStyleValue;\nScopingShim.prototype['setElementClass'] = ScopingShim.prototype.setElementClass;\nScopingShim.prototype['_styleInfoForNode'] = ScopingShim.prototype._styleInfoForNode;\nScopingShim.prototype['transformCustomStyleForDocument'] = ScopingShim.prototype.transformCustomStyleForDocument;\nScopingShim.prototype['getStyleAst'] = ScopingShim.prototype.getStyleAst;\nScopingShim.prototype['styleAstToString'] = ScopingShim.prototype.styleAstToString;\nScopingShim.prototype['flushCustomStyles'] = ScopingShim.prototype.flushCustomStyles;\nObject.defineProperties(ScopingShim.prototype, {\n  'nativeShadow': {\n    get() {\n      return nativeShadow;\n    }\n  },\n  'nativeCss': {\n    get() {\n      return nativeCssVariables;\n    }\n  }\n});","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n'use strict';\n\nexport default class StyleCache {\n  constructor(typeMax = 100) {\n    // map element name -> [{properties, styleElement, scopeSelector}]\n    this.cache = {};\n    this.typeMax = typeMax;\n  }\n\n  _validate(cacheEntry, properties, ownPropertyNames) {\n    for (let idx = 0; idx < ownPropertyNames.length; idx++) {\n      let pn = ownPropertyNames[idx];\n      if (cacheEntry.properties[pn] !== properties[pn]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  store(tagname, properties, styleElement, scopeSelector) {\n    let list = this.cache[tagname] || [];\n    list.push({properties, styleElement, scopeSelector});\n    if (list.length > this.typeMax) {\n      list.shift();\n    }\n    this.cache[tagname] = list;\n  }\n\n  fetch(tagname, properties, ownPropertyNames) {\n    let list = this.cache[tagname];\n    if (!list) {\n      return;\n    }\n    // reverse list for most-recent lookups\n    for (let idx = list.length - 1; idx >= 0; idx--) {\n      let entry = list[idx];\n      if (this._validate(entry, properties, ownPropertyNames)) {\n        return entry;\n      }\n    }\n  }\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport { MIXIN_MATCH, VAR_ASSIGN } from './common-regex.js';\n\n/**\n * @param {Element} element\n * @param {Object=} properties\n */\nexport function updateNativeProperties(element, properties) {\n  // remove previous properties\n  for (let p in properties) {\n    // NOTE: for bc with shim, don't apply null values.\n    if (p === null) {\n      element.style.removeProperty(p);\n    } else {\n      element.style.setProperty(p, properties[p]);\n    }\n  }\n}\n\n/**\n * @param {Element} element\n * @param {string} property\n * @return {string}\n */\nexport function getComputedStyleValue(element, property) {\n  /**\n   * @const {string}\n   */\n  const value = window.getComputedStyle(element).getPropertyValue(property);\n  if (!value) {\n    return '';\n  } else {\n    return value.trim();\n  }\n}\n\n/**\n * return true if `cssText` contains a mixin definition or consumption\n * @param {string} cssText\n * @return {boolean}\n */\nexport function detectMixin(cssText) {\n  const has = MIXIN_MATCH.test(cssText) || VAR_ASSIGN.test(cssText);\n  // reset state of the regexes\n  MIXIN_MATCH.lastIndex = 0;\n  VAR_ASSIGN.lastIndex = 0;\n  return has;\n}\n","/**\n@license\nCopyright (c) 2017 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport ScopingShim from '../src/scoping-shim.js';\nimport {nativeCssVariables, nativeShadow} from '../src/style-settings.js';\n\n/** @const {ScopingShim} */\nconst scopingShim = new ScopingShim();\n\nlet ApplyShim, CustomStyleInterface;\n\nif (window['ShadyCSS']) {\n  ApplyShim = window['ShadyCSS']['ApplyShim'];\n  CustomStyleInterface = window['ShadyCSS']['CustomStyleInterface'];\n}\n\nwindow.ShadyCSS = {\n  ScopingShim: scopingShim,\n  /**\n   * @param {!HTMLTemplateElement} template\n   * @param {string} elementName\n   * @param {string=} elementExtends\n   */\n  prepareTemplate(template, elementName, elementExtends) {\n    scopingShim.flushCustomStyles();\n    scopingShim.prepareTemplate(template, elementName, elementExtends)\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   * @param {Object=} properties\n   */\n  styleSubtree(element, properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleSubtree(element, properties);\n  },\n\n  /**\n   * @param {!HTMLElement} element\n   */\n  styleElement(element) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleElement(element);\n  },\n\n  /**\n   * @param {Object=} properties\n   */\n  styleDocument(properties) {\n    scopingShim.flushCustomStyles();\n    scopingShim.styleDocument(properties);\n  },\n\n  /**\n   * @param {Element} element\n   * @param {string} property\n   * @return {string}\n   */\n  getComputedStyleValue(element, property) {\n    return scopingShim.getComputedStyleValue(element, property);\n  },\n\n  nativeCss: nativeCssVariables,\n\n  nativeShadow: nativeShadow\n};\n\nif (ApplyShim) {\n  window.ShadyCSS.ApplyShim = ApplyShim;\n}\n\nif (CustomStyleInterface) {\n  window.ShadyCSS.CustomStyleInterface = CustomStyleInterface;\n}"]}