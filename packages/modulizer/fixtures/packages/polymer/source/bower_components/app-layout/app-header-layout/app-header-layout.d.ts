/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   app-header-layout/app-header-layout.html
 */

/// <reference path="../../polymer/types/polymer.d.ts" />
/// <reference path="../../iron-flex-layout/iron-flex-layout.d.ts" />
/// <reference path="../app-layout-behavior/app-layout-behavior.d.ts" />

/**
 * app-header-layout is a wrapper element that positions an app-header and other content. This
 * element uses the document scroll by default, but it can also define its own scrolling region.
 *
 * Using the document scroll:
 *
 * ```html
 * <app-header-layout>
 *   <app-header slot="header" fixed condenses effects="waterfall">
 *     <app-toolbar>
 *       <div main-title>App name</div>
 *     </app-toolbar>
 *   </app-header>
 *   <div>
 *     main content
 *   </div>
 * </app-header-layout>
 * ```
 *
 * Using an own scrolling region:
 *
 * ```html
 * <app-header-layout has-scrolling-region style="width: 300px; height: 400px;">
 *   <app-header slot="header" fixed condenses effects="waterfall">
 *     <app-toolbar>
 *       <div main-title>App name</div>
 *     </app-toolbar>
 *   </app-header>
 *   <div>
 *     main content
 *   </div>
 * </app-header-layout>
 * ```
 *
 * Add the `fullbleed` attribute to app-header-layout to make it fit the size of its container:
 *
 * ```html
 * <app-header-layout fullbleed>
 *  ...
 * </app-header-layout>
 * ```
 */
interface AppHeaderLayoutElement extends Polymer.Element, Polymer.AppLayoutBehavior {

  /**
   * If true, the current element will have its own scrolling region.
   * Otherwise, it will use the document scroll to control the header.
   */
  hasScrollingRegion: boolean|null|undefined;

  /**
   * A reference to the app-header element.
   */
  readonly header: any;
  _updateLayoutStates(): void;
}

interface HTMLElementTagNameMap {
  "app-header-layout": AppHeaderLayoutElement;
}
