/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   lib/elements/dom-bind.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.

declare module 'goog:polymer.polymer.lib.elements.domBind' {

  import {PropertyEffects} from 'goog:polymer.polymer.lib.mixins.propertyEffects'; // from //third_party/javascript/polymer/v2/polymer

  import {OptionalMutableData} from 'goog:polymer.polymer.lib.mixins.mutableData'; // from //third_party/javascript/polymer/v2/polymer

  import {GestureEventListeners} from 'goog:polymer.polymer.lib.mixins.gestureEventListeners'; // from //third_party/javascript/polymer/v2/polymer

  export {DomBind};

  /**
   * Custom element to allow using Polymer's template features (data binding,
   * declarative event listeners, etc.) in the main document without defining
   * a new custom element.
   *
   * `<template>` tags utilizing bindings may be wrapped with the `<dom-bind>`
   * element, which will immediately stamp the wrapped template into the main
   * document and bind elements to the `dom-bind` element itself as the
   * binding scope.
   */
  class DomBind extends
    PropertyEffects(
    OptionalMutableData(
    GestureEventListeners(
    HTMLElement))) {
    attributeChangedCallback(): void;
    connectedCallback(): void;
    disconnectedCallback(): void;

    /**
     * Forces the element to render its content. This is typically only
     * necessary to call if HTMLImports with the async attribute are used.
     */
    render(): void;
  }

  global {

    interface HTMLElementTagNameMap {
      "dom-bind": DomBind;
    }
  }
}
